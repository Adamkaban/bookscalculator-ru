---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import SimpleFooter from '../components/SimpleFooter.astro';
import SEOHead from '../components/SEOHead.astro';

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è
const readingSpeeds = [
  { id: 'real-slow', name: '–û—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–æ', wpm: 150, emoji: 'üêå', description: '150 —Å–ª–æ–≤/–º–∏–Ω' },
  { id: 'slow', name: '–ú–µ–¥–ª–µ–Ω–Ω–æ', wpm: 200, emoji: 'üê¢', description: '200 —Å–ª–æ–≤/–º–∏–Ω' },
  { id: 'medium', name: '–°—Ä–µ–¥–Ω–µ', wpm: 250, emoji: 'üêí', description: '250 —Å–ª–æ–≤/–º–∏–Ω' },
  { id: 'fast', name: '–ë—ã—Å—Ç—Ä–æ', wpm: 325, emoji: 'üêÜ', description: '325 —Å–ª–æ–≤/–º–∏–Ω' },
  { id: 'real-fast', name: '–û—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ', wpm: 400, emoji: 'ü¶Ö', description: '400+ —Å–ª–æ–≤/–º–∏–Ω' }
];

const wordCounts = [10, 50, 100, 250, 500, 1000, 5000, 10000, 70000, 100000];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è
function calculateReadingTime(words, wpm) {
  const minutes = Math.ceil(words / wpm);
  const hours = Math.floor(minutes / 60);
  const remainingMinutes = minutes % 60;

  if (hours === 0) {
    return remainingMinutes === 0 ? '0 –º–∏–Ω' : `${remainingMinutes} –º–∏–Ω`;
  } else if (remainingMinutes === 0) {
    return `${hours} —á`;
  } else {
    return `${hours} —á ${remainingMinutes} –º–∏–Ω`;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å–µ–∫—É–Ω–¥
function calculateReadingTimeSeconds(words, wpm) {
  const totalSeconds = Math.ceil((words / wpm) * 60);

  if (totalSeconds < 60) {
    return `${totalSeconds} —Å–µ–∫`;
  } else {
    const minutes = Math.floor(totalSeconds / 60);
    const seconds = totalSeconds % 60;
    return seconds === 0 ? `${minutes} –º–∏–Ω` : `${minutes} –º–∏–Ω ${seconds} —Å–µ–∫`;
  }
}

// –ö–∞–Ω–æ–Ω–∏—á–µ—Å–∫–∏–π URL
const canonicalURL = new URL(Astro.url.pathname, Astro.site);

// SEO –¥–∞–Ω–Ω—ã–µ - –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –Ø–Ω–¥–µ–∫—Å
const seoData = {
  title: "–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è —Å–ª–æ–≤ –æ–Ω–ª–∞–π–Ω - —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∑–∞ —Å–µ–∫—É–Ω–¥—ã | 100, 250, 500, 1000 —Å–ª–æ–≤",
  description: "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –æ–Ω–ª–∞–π–Ω –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è —Å–ª–æ–≤. –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –∑–∞ —Å–µ–∫—É–Ω–¥—ã, —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω—É–∂–Ω–æ –¥–ª—è —á—Ç–µ–Ω–∏—è 100, 250, 500, 1000, 5000 —Å–ª–æ–≤ –ø—Ä–∏ —Ä–∞–∑–Ω—ã—Ö —Å–∫–æ—Ä–æ—Å—Ç—è—Ö —á—Ç–µ–Ω–∏—è –æ—Ç 150 –¥–æ 400 —Å–ª–æ–≤ –≤ –º–∏–Ω—É—Ç—É. –¢–∞–±–ª–∏—Ü–∞ —Å —Ç–æ—á–Ω—ã–º–∏ —Ä–∞—Å—á–µ—Ç–∞–º–∏ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —á—Ç–µ–Ω–∏—è.",
  keywords: [
    "–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è —Å–ª–æ–≤",
    "—Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —á–∏—Ç–∞—Ç—å 250 —Å–ª–æ–≤",
    "–≤—Ä–µ–º—è —á—Ç–µ–Ω–∏—è 100 —Å–ª–æ–≤",
    "–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —á—Ç–µ–Ω–∏—è 500 —Å–ª–æ–≤",
    "—Å–∫–æ—Ä–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è —Å–ª–æ–≤ –≤ –º–∏–Ω—É—Ç—É",
    "—Ç–∞–±–ª–∏—Ü–∞ –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è",
    "—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç —á–∏—Ç–∞—Ç—å 1000 —Å–ª–æ–≤",
    "–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å–ª–æ–≤ –≤ –º–∏–Ω—É—Ç—É",
    "—Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —á–∏—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç",
    "—Ä–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —á—Ç–µ–Ω–∏–µ",
    "–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —á—Ç–µ–Ω–∏—è –æ–Ω–ª–∞–π–Ω",
    "–≤—Ä–µ–º—è —á—Ç–µ–Ω–∏—è –∫–Ω–∏–≥–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä",
    "—Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —É–π–¥–µ—Ç –Ω–∞ —á—Ç–µ–Ω–∏–µ",
    "–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å–∫–æ—Ä–æ—Å—Ç–∏ —á—Ç–µ–Ω–∏—è"
  ]
};
---

<BaseLayout>
  <SEOHead
    title={seoData.title}
    description={seoData.description}
    keywords={seoData.keywords.join(', ')}
  />

  <style>
    h2 {
      background: #f8fafc !important;
      border-bottom: 4px solid #3b82f6 !important;
      padding: 1rem !important;
      margin: 2rem 0 1rem 0 !important;
      border-radius: 8px 8px 0 0 !important;
      font-weight: 700 !important;
    }

    h3 {
      background: #f1f5f9 !important;
      border-left: 4px solid #3b82f6 !important;
      padding: 0.75rem !important;
      margin: 1.5rem 0 1rem 0 !important;
      border-radius: 0 8px 8px 0 !important;
      font-weight: 600 !important;
    }


    .time-cell {
      transition: background-color 0.2s ease;
    }

    .time-cell:hover {
      background-color: #f0f9ff !important;
    }

    .highlight-250 {
      background-color: #dbeafe !important;
      font-weight: 600;
      border: 2px solid #3b82f6;
    }

    /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞ */
    .slider::-webkit-slider-thumb {
      appearance: none;
      height: 20px;
      width: 20px;
      border-radius: 50%;
      background: #3b82f6;
      cursor: pointer;
      border: 2px solid #ffffff;
      box-shadow: 0 2px 6px rgba(0,0,0,0.2);
    }

    .slider::-moz-range-thumb {
      height: 20px;
      width: 20px;
      border-radius: 50%;
      background: #3b82f6;
      cursor: pointer;
      border: 2px solid #ffffff;
      box-shadow: 0 2px 6px rgba(0,0,0,0.2);
    }

    .slider::-webkit-slider-track {
      width: 100%;
      height: 8px;
      border-radius: 4px;
      background: #e2e8f0;
      outline: none;
    }

    .slider::-moz-range-track {
      width: 100%;
      height: 8px;
      border-radius: 4px;
      background: #e2e8f0;
      outline: none;
    }

    /* –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–º —É—Å–∫–æ—Ä–µ–Ω–∏–µ–º */
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translate3d(0, 20px, 0);
      }
      to {
        opacity: 1;
        transform: translate3d(0, 0, 0);
      }
    }

    /* –ê–ø–ø–∞—Ä–∞—Ç–Ω–æ–µ —É—Å–∫–æ—Ä–µ–Ω–∏–µ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ */
    .time-cell,
    .speed-selector,
    tbody tr,
    #calculator-section {
      will-change: transform;
      backface-visibility: hidden;
    }

    /* –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–π */
    tbody tr:hover {
      transform: translateY(-1px);
    }

    /* –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∫—É—Ä—Å–æ—Ä–∞ */
    #dynamic-words {
      border-right: 3px solid #2563eb;
      animation: blink 1s infinite;
      will-change: border-color;
    }

    @keyframes blink {
      0%, 50% { border-color: #2563eb; }
      51%, 100% { border-color: transparent; }
    }

    /* –û—Ç–∫–ª—é—á–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */
    @media (max-width: 768px) {
      #dynamic-words {
        border-right: none;
        animation: none;
      }
    }

    /* –ö–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã */
    tbody tr:hover {
      background-color: #f8fafc !important;
      transition: background-color 0.2s ease;
    }

    /* –ü–ª–∞–Ω—à–µ—Ç–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è */
    @media (max-width: 1024px) {
      .container {
        padding-left: 1rem;
        padding-right: 1rem;
      }

      h1 {
        font-size: 2.5rem !important;
      }

      .mobile-scroll table {
        min-width: 550px;
      }
    }

    /* –ú–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è */
    @media (max-width: 768px) {
      h1 {
        font-size: 2rem !important;
        line-height: 1.2;
      }

      h2 {
        font-size: 1.5rem !important;
        padding: 0.75rem !important;
      }

      h3 {
        font-size: 1.25rem !important;
        padding: 0.5rem !important;
      }

      .mobile-scroll {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
        margin: 0 -1rem;
        padding: 0 1rem;
      }

      .mobile-scroll table {
        min-width: 500px;
        font-size: 0.875rem;
      }

      /* –£–ª—É—á—à–µ–Ω–Ω–∞—è –º–æ–±–∏–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ */
      .mobile-scroll th,
      .mobile-scroll td {
        padding: 0.5rem 0.25rem;
        min-width: 60px;
      }

      /* –ú–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è —Å–ª–∞–π–¥–µ—Ä–∞ */
      .slider {
        height: 8px;
        margin: 0.5rem 0;
      }

      .slider::-webkit-slider-thumb {
        height: 28px;
        width: 28px;
      }

      .slider::-moz-range-thumb {
        height: 28px;
        width: 28px;
      }

      /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ */
      .grid-cols-3 {
        grid-template-columns: repeat(1, 1fr);
        gap: 1rem;
      }

      /* –£–ª—É—á—à–µ–Ω–Ω–∞—è –º–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */
      .container {
        padding-left: 0.75rem;
        padding-right: 0.75rem;
      }
    }

    /* –ú–∞–ª–µ–Ω—å–∫–∏–µ –º–æ–±–∏–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ */
    @media (max-width: 480px) {
      h1 {
        font-size: 1.75rem !important;
      }

      .mobile-scroll th,
      .mobile-scroll td {
        padding: 0.375rem 0.125rem;
        font-size: 0.75rem;
      }

      .mobile-scroll table {
        min-width: 450px;
      }

      /* –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏—Ö —ç–∫—Ä–∞–Ω–∞—Ö */
      .bg-white.rounded-lg.p-4 {
        padding: 0.75rem;
      }
    }
  </style>

  <Header />

  <main>
    <div class="min-h-screen bg-white">
      <!-- Hero —Å–µ–∫—Ü–∏—è -->
      <section class="bg-gradient-to-br from-slate-50 to-blue-50 py-12">
        <div class="container mx-auto px-4">
          <div class="max-w-4xl mx-auto text-center">
            <h1 class="text-4xl md:text-5xl font-bold text-slate-900 mb-6" id="main-title">
              –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –ø—Ä–æ—á–∏—Ç–∞—Ç—å
              <span id="dynamic-words" class="text-blue-600">250 —Å–ª–æ–≤?</span>
            </h1>
            <p class="text-xl text-slate-600 mb-8" id="main-description">
              –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –ª—é–±—É—é —Å—Ç—Ä–æ–∫—É –≤ —Ç–∞–±–ª–∏—Ü–µ –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è —á—Ç–µ–Ω–∏—è
            </p>


            <!-- –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –±–ª–æ–∫ —Å–ª–∞–π–¥–µ—Ä–∞ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∫–ª–∏–∫–µ) -->
            <div id="calculator-section" class="bg-white rounded-xl shadow-lg p-6 mb-6 max-w-2xl mx-auto hidden">
              <div class="grid md:grid-cols-1 gap-6">
                <!-- –°–ª–∞–π–¥–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ —á—Ç–µ–Ω–∏—è -->
                <div class="bg-slate-50 rounded-lg p-4">
                  <label for="speed-slider" class="block text-sm font-medium text-slate-700 mb-3 text-center">
                    üéõÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è: <span id="current-speed">250 —Å–ª–æ–≤/–º–∏–Ω</span>
                  </label>
                  <input
                    type="range"
                    id="speed-slider"
                    min="150"
                    max="400"
                    value="250"
                    step="25"
                    class="w-full h-2 bg-slate-200 rounded-lg appearance-none cursor-pointer slider"
                  />
                  <div class="flex justify-between text-xs text-slate-500 mt-2">
                    <span>üêå 150 —Å–ª–æ–≤/–º–∏–Ω</span>
                    <span>ü¶Ö 400+ —Å–ª–æ–≤/–º–∏–Ω</span>
                  </div>
                </div>

                <!-- –†–µ–∑—É–ª—å—Ç–∞—Ç -->
                <div class="bg-green-50 border border-green-200 rounded-lg p-4">
                  <div class="text-center">
                    <div class="text-2xl mb-2">‚è±Ô∏è</div>
                    <h3 class="text-xl font-bold text-green-900 mb-2" id="result-title">
                      –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞
                    </h3>
                    <p class="text-lg text-green-800" id="result-text">
                      –í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è –≤—ã—à–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      <!-- –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è -->
      <section class="py-12">
        <div class="container mx-auto px-4">
          <div class="max-w-6xl mx-auto">
            <div class="bg-white rounded-xl shadow-lg overflow-hidden">
              <div class="mobile-scroll">
                <table class="w-full">
                  <thead>
                    <tr class="bg-slate-50">
                      <th class="px-4 py-3 text-left font-bold text-white border-b bg-green-600">–°–õ–û–í</th>
                      {readingSpeeds.map(speed => (
                        <th class="px-2 py-3 text-center font-bold text-slate-800 border-b min-w-[100px]">
                          <div class="flex flex-col items-center">
                            <span class="text-lg mb-1">{speed.emoji}</span>
                            <span class="text-xs font-medium">{speed.name}</span>
                            <span class="text-xs text-slate-600">({speed.wpm})</span>
                          </div>
                        </th>
                      ))}
                    </tr>
                  </thead>
                  <tbody>
                    {wordCounts.map(count => (
                      <tr class={`border-b hover:bg-slate-50 ${count === 250 ? 'highlight-250' : ''}`}>
                        <td class="px-4 py-4 font-semibold text-white border-r bg-green-600">
                          {count === 250 ? (
                            <span class="text-blue-200 font-bold">250 ‚Üê</span>
                          ) : (
                            count.toLocaleString('ru-RU')
                          )}
                        </td>
                        {readingSpeeds.map(speed => (
                          <td class="px-2 py-4 text-center text-slate-700 time-cell">
                            {count < 100 ?
                              calculateReadingTimeSeconds(count, speed.wpm) :
                              calculateReadingTime(count, speed.wpm)
                            }
                          </td>
                        ))}
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </div>

            <!-- –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é -->
            <div class="mt-8 bg-gradient-to-br from-blue-50 to-indigo-50 border border-blue-200 rounded-xl p-8 text-center">
              <div class="max-w-2xl mx-auto">
                <h3 class="text-2xl font-bold text-slate-900 mb-4">
                  üéØ –•–æ—Ç–∏—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –∫–Ω–∏–≥ —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∑–∞ –≥–æ–¥?
                </h3>
                <p class="text-lg text-slate-700 mb-6">
                  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –∫–Ω–∏–≥ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∑–∞ –º–µ—Å—è—Ü, –∫–≤–∞—Ä—Ç–∞–ª –∏–ª–∏ –≥–æ–¥ –ø—Ä–∏ –≤–∞—à–µ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ —á—Ç–µ–Ω–∏—è!
                </p>
                <div class="grid md:grid-cols-3 gap-4 mb-6 text-sm">
                  <div class="bg-white rounded-lg p-4 shadow-sm">
                    <div class="text-2xl mb-2">üìö</div>
                    <div class="font-semibold text-slate-900">–£—á–∏—Ç—ã–≤–∞–µ—Ç –∫–Ω–∏–≥–∏</div>
                    <div class="text-slate-600">–°—Ä–µ–¥–Ω—é—é –¥–ª–∏–Ω—É –∫–Ω–∏–≥</div>
                  </div>
                  <div class="bg-white rounded-lg p-4 shadow-sm">
                    <div class="text-2xl mb-2">‚è∞</div>
                    <div class="font-semibold text-slate-900">–†–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã</div>
                    <div class="text-slate-600">–ú–µ—Å—è—Ü, –≥–æ–¥, 10 –ª–µ—Ç</div>
                  </div>
                  <div class="bg-white rounded-lg p-4 shadow-sm">
                    <div class="text-2xl mb-2">‚ö°</div>
                    <div class="font-semibold text-slate-900">–°–∫–æ—Ä–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è</div>
                    <div class="text-slate-600">–û—Ç 150 –¥–æ 400+ —Å–ª–æ–≤/–º–∏–Ω</div>
                  </div>
                </div>
                <a href="/" class="inline-block">
                  <button class="bg-blue-600 hover:bg-blue-700 text-white px-8 py-4 rounded-lg font-semibold text-lg transition-all duration-200 hover:shadow-lg hover:scale-105">
                    –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—É üöÄ
                  </button>
                </a>
              </div>
            </div>

            <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
            <div class="mt-8 grid md:grid-cols-2 gap-6">
              <div class="bg-blue-50 border border-blue-200 rounded-lg p-6">
                <h3 class="text-lg font-semibold text-blue-900 mb-4 flex items-center">
                  <span class="text-2xl mr-2">üìö</span>
                  –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ —á—Ç–µ–Ω–∏–∏
                </h3>
                <ul class="space-y-3 text-blue-800">
                  <li>‚Ä¢ –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è –≤–∑—Ä–æ—Å–ª–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ - 200-250 —Å–ª–æ–≤ –≤ –º–∏–Ω—É—Ç—É</li>
                  <li>‚Ä¢ 250 —Å–ª–æ–≤ - —ç—Ç–æ –ø—Ä–∏–º–µ—Ä–Ω–æ –æ–¥–∏–Ω –∞–±–∑–∞—Ü —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –ø–æ–ª—Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–Ω–∏–≥–∏</li>
                  <li>‚Ä¢ –ü—Ä–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ 250 —Å–ª–æ–≤/–º–∏–Ω –≤—ã –ø—Ä–æ—á–∏—Ç–∞–µ—Ç–µ 250 —Å–ª–æ–≤ –∑–∞ 1 –º–∏–Ω—É—Ç—É</li>
                  <li>‚Ä¢ –°–∫–æ—Ä–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è –º–æ–∂–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π</li>
                </ul>
              </div>

              <div class="bg-green-50 border border-green-200 rounded-lg p-6">
                <h3 class="text-lg font-semibold text-green-900 mb-4 flex items-center">
                  <span class="text-2xl mr-2">‚ö°</span>
                  –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É
                </h3>
                <ul class="space-y-3 text-green-800">
                  <li>‚Ä¢ –ù–∞–π–¥–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ –ø–µ—Ä–≤–æ–º –∑–µ–ª–µ–Ω–æ–º —Å—Ç–æ–ª–±—Ü–µ</li>
                  <li>‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ —Ç–∞–±–ª–∏—Ü—ã</li>
                  <li>‚Ä¢ –í —è—á–µ–π–∫–µ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è - —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è —á—Ç–µ–Ω–∏—è</li>
                  <li>‚Ä¢ 250 —Å–ª–æ–≤ –≤—ã–¥–µ–ª–µ–Ω—ã –≥–æ–ª—É–±—ã–º —Ü–≤–µ—Ç–æ–º –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </section>
    </div>
  </main>

  <SimpleFooter />

  <!-- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤ -->
  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "WebApplication",
      "name": "–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è —Å–ª–æ–≤",
      "description": "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –æ–Ω–ª–∞–π–Ω –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞. –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ, —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è —á—Ç–µ–Ω–∏—è –ª—é–±–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤ –ø—Ä–∏ —Ä–∞–∑–Ω—ã—Ö —Å–∫–æ—Ä–æ—Å—Ç—è—Ö —á—Ç–µ–Ω–∏—è.",
      "url": canonicalURL,
      "applicationCategory": "Utility",
      "operatingSystem": "Web",
      "offers": {
        "@type": "Offer",
        "price": "0",
        "priceCurrency": "RUB"
      },
      "featureList": [
        "–†–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è –æ—Ç 10 –¥–æ 100000 —Å–ª–æ–≤",
        "5 —Å–∫–æ—Ä–æ—Å—Ç–µ–π —á—Ç–µ–Ω–∏—è –æ—Ç 150 –¥–æ 400+ —Å–ª–æ–≤ –≤ –º–∏–Ω—É—Ç—É",
        "–¢–æ—á–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã –≤ —Å–µ–∫—É–Ω–¥–∞—Ö –∏ –º–∏–Ω—É—Ç–∞—Ö",
        "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏",
        "–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤"
      ],
      "screenshot": "https://bookscalculator.ru/images/hero-section.webp",
      "author": {
        "@type": "Organization",
        "name": "BooksCalculator.ru"
      },
      "publisher": {
        "@type": "Organization",
        "name": "BooksCalculator.ru"
      }
    }
  </script>

  <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤ -->
  <meta name="robots" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1" />
  <meta name="googlebot" content="index, follow" />

  <script>
    // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è typewriter –∞–Ω–∏–º–∞—Ü–∏—è
    class DynamicTitleTypewriter {
      constructor(element, words) {
        this.element = element;
        this.words = words;
        this.currentIndex = 0;
        this.currentText = '';
        this.isDeleting = false;
        this.isStopped = false;
        this.timeoutId = null;
      }

      type() {
        if (this.isStopped) return;

        const currentWord = this.words[this.currentIndex];

        if (this.isDeleting) {
          this.currentText = this.currentText.slice(0, -1);
          this.element.textContent = this.currentText;

          if (this.currentText === '') {
            this.isDeleting = false;
            this.currentIndex = (this.currentIndex + 1) % this.words.length;
            this.timeoutId = setTimeout(() => this.type(), 500);
          } else {
            this.timeoutId = setTimeout(() => this.type(), 75);
          }
        } else {
          this.currentText = currentWord.slice(0, this.currentText.length + 1);
          this.element.textContent = this.currentText;

          if (this.currentText === currentWord) {
            this.timeoutId = setTimeout(() => {
              this.isDeleting = true;
              this.type();
            }, 3000);
          } else {
            this.timeoutId = setTimeout(() => this.type(), 150);
          }
        }
      }

      stopAndFix(text) {
        this.isStopped = true;
        if (this.timeoutId) {
          clearTimeout(this.timeoutId);
        }
        this.element.textContent = text;
        this.element.style.borderRight = 'none';
      }

      start() {
        this.type();
      }
    }

    // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è
    class ReadingTimeCalculator {
      constructor() {
        this.currentWords = 250;
        this.currentSpeed = 250;
        this.wordCounts = [10, 50, 100, 250, 500, 1000, 5000, 10000, 70000, 100000];
        this.init();
      }

      init() {
        this.bindEvents();
      }

      bindEvents() {
        // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Å—Ç—Ä–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
        const tbody = document.querySelector('tbody');
        if (tbody) {
          tbody.addEventListener('click', (e) => {
            const row = e.target.closest('tr');
            if (row) {
              const index = Array.from(row.parentNode.children).indexOf(row);
              this.handleRowClick(index);
            }
          });
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞ —Å –¥–µ–±–æ—É–Ω—Å–∏–Ω–≥–æ–º
        const calculatorSection = document.getElementById('calculator-section');
        if (calculatorSection) {
          const speedSlider = calculatorSection.querySelector('#speed-slider');
          if (speedSlider) {
            let debounceTimer;
            speedSlider.addEventListener('input', (e) => {
              clearTimeout(debounceTimer);
              debounceTimer = setTimeout(() => {
                this.currentSpeed = parseInt(e.target.value);
                this.updateDisplay();
                this.showResult(this.currentWords, this.currentSpeed);
              }, 16); // ~60fps
            });
          }
        }
      }

      handleRowClick(index) {
        const words = this.wordCounts[index];
        this.currentWords = words;
        this.updateMainContent(words);
        this.showCalculator();
        this.showResult(words, this.currentSpeed);
      }

      updateMainContent(words) {
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é typewriter –∏ —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        if (window.titleTypewriter) {
          window.titleTypewriter.stopAndFix(`${words.toLocaleString('ru-RU')} —Å–ª–æ–≤?`);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è SEO
        this.updateMetaTags(words);

        const description = document.getElementById('main-description');
        if (description) {
          description.textContent = '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–∞–π–¥–µ—Ä –≤—ã—à–µ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞';
        }
      }

      updateMetaTags(words) {
        // –û–±–Ω–æ–≤–ª—è–µ–º title —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const formattedWords = words.toLocaleString('ru-RU');
        const newTitle = `–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è ${formattedWords} —Å–ª–æ–≤ - —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∑–∞ —Å–µ–∫—É–Ω–¥—ã`;
        const newDescription = `–£–∑–Ω–∞–π—Ç–µ, —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è —á—Ç–µ–Ω–∏—è ${formattedWords} —Å–ª–æ–≤ –ø—Ä–∏ —Ä–∞–∑–Ω—ã—Ö —Å–∫–æ—Ä–æ—Å—Ç—è—Ö —á—Ç–µ–Ω–∏—è –æ—Ç 150 –¥–æ 400 —Å–ª–æ–≤ –≤ –º–∏–Ω—É—Ç—É. –¢–æ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è –æ–Ω–ª–∞–π–Ω.`;

        // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∞-—Ç–µ–≥–∏ –≤ head
        document.title = newTitle;

        // –û–±–Ω–æ–≤–ª—è–µ–º Open Graph –º–µ—Ç–∞-—Ç–µ–≥–∏
        const ogTitle = document.querySelector('meta[property="og:title"]');
        const ogDescription = document.querySelector('meta[property="og:description"]');

        if (ogTitle) ogTitle.setAttribute('content', newTitle);
        if (ogDescription) ogDescription.setAttribute('content', newDescription);

        // –û–±–Ω–æ–≤–ª—è–µ–º Twitter Card –º–µ—Ç–∞-—Ç–µ–≥–∏
        const twitterTitle = document.querySelector('meta[name="twitter:title"]');
        const twitterDescription = document.querySelector('meta[name="twitter:description"]');

        if (twitterTitle) twitterTitle.setAttribute('content', newTitle);
        if (twitterDescription) twitterDescription.setAttribute('content', newDescription);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–Ω–æ–Ω–∏—á–µ—Å–∫–∏–π URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        const canonicalLink = document.querySelector('link[rel="canonical"]');
        if (canonicalLink) {
          const baseUrl = canonicalLink.href.split('?')[0];
          canonicalLink.href = `${baseUrl}?words=${words}`;
        }
      }

      showCalculator() {
        const calculatorSection = document.getElementById('calculator-section');
        if (calculatorSection && calculatorSection.classList.contains('hidden')) {
          calculatorSection.classList.remove('hidden');
          calculatorSection.style.animation = 'fadeInUp 0.6s ease-out';
        }
      }

      showResult(words, speed) {
        const calculatorSection = document.getElementById('calculator-section');
        const resultTitle = calculatorSection?.querySelector('#result-title');
        const resultText = calculatorSection?.querySelector('#result-text');

        if (resultTitle && resultText) {
          const timeResult = this.calculateTime(words, speed);
          resultTitle.textContent = `–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è ${words.toLocaleString('ru-RU')} —Å–ª–æ–≤`;
          resultText.textContent = `–í—ã –ø—Ä–æ—á–∏—Ç–∞–µ—Ç–µ ${words.toLocaleString('ru-RU')} —Å–ª–æ–≤ –∑–∞ ${timeResult} –ø—Ä–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ ${speed} —Å–ª–æ–≤/–º–∏–Ω`;
        }
      }

      calculateTime(words, speed) {
        if (words < 100) {
          const totalSeconds = Math.ceil((words / speed) * 60);
          return totalSeconds < 60
            ? `${totalSeconds} —Å–µ–∫`
            : `${Math.floor(totalSeconds / 60)} –º–∏–Ω ${totalSeconds % 60 || ''} —Å–µ–∫`.trim();
        } else {
          const minutes = Math.ceil(words / speed);
          const hours = Math.floor(minutes / 60);
          const remainingMinutes = minutes % 60;

          if (hours === 0) {
            return remainingMinutes === 0 ? '0 –º–∏–Ω' : `${remainingMinutes} –º–∏–Ω`;
          } else if (remainingMinutes === 0) {
            return `${hours} —á`;
          } else {
            return `${hours} —á ${remainingMinutes} –º–∏–Ω`;
          }
        }
      }

      updateDisplay() {
        const calculatorSection = document.getElementById('calculator-section');
        const currentSpeedDisplay = calculatorSection?.querySelector('#current-speed');
        if (currentSpeedDisplay) {
          currentSpeedDisplay.textContent = `${this.currentSpeed} —Å–ª–æ–≤/–º–∏–Ω`;
        }
      }
    }

    // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    document.addEventListener('DOMContentLoaded', () => {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º requestIdleCallback –¥–ª—è –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á
      if ('requestIdleCallback' in window) {
        requestIdleCallback(initPage);
      } else {
        // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
        setTimeout(initPage, 1);
      }
    });

    function initPage() {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è typewriter –∞–Ω–∏–º–∞—Ü–∏–∏
      const dynamicElement = document.getElementById('dynamic-words');
      if (dynamicElement) {
        const typewriter = new DynamicTitleTypewriter(dynamicElement, [
          "100 —Å–ª–æ–≤?",
          "250 —Å–ª–æ–≤?",
          "500 —Å–ª–æ–≤?",
          "1,000 —Å–ª–æ–≤?",
          "5,000 —Å–ª–æ–≤?"
        ]);
        typewriter.start();
        window.titleTypewriter = typewriter;
      }

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
      new ReadingTimeCalculator();
    }
  </script>
</BaseLayout>