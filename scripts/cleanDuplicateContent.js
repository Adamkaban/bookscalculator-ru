// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥—É–±–ª–∏—Ä—É—é—â–µ–≥–æ—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å–ª–æ–≤
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const pagesDir = path.join(__dirname, '../src/pages');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥—É–±–ª–∏—Ä—É—é—â–µ–≥–æ—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function cleanPage(pageName) {
  const filePath = path.join(pagesDir, pageName);

  if (!fs.existsSync(filePath)) {
    console.log(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${pageName}`);
    return false;
  }

  try {
    let content = fs.readFileSync(filePath, 'utf8');

    // 1. –£–¥–∞–ª—è–µ–º –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –±–ª–æ–∫–∏ .table-row-link —Å—Ç–∏–ª–µ–π
    content = content.replace(
      /(\.table-row-link \{\s*display: block;\s*text-decoration: none;\s*color: inherit;\s*transition: all 0\.2s ease;\s*\}\s*\.table-row-link:hover \{\s*transform: translateX\(4px\);\s*\}\s*)/g,
      ''
    );

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –±–ª–æ–∫–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ
    const tableRowLinkPattern = /\.table-row-link \{\s*display: block;\s*text-decoration: none;\s*color: inherit;\s*transition: all 0\.2s ease;\s*\}\s*\.table-row-link:hover \{\s*transform: translateX\(4px\);\s*\}/g;
    const matches = content.match(new RegExp(tableRowLinkPattern.source, 'g'));
    if (matches && matches.length > 1) {
      // –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –±–ª–æ–∫–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ
      for (let i = 1; i < matches.length; i++) {
        content = content.replace(matches[i], '');
      }
    }

    // 2. –£–¥–∞–ª—è–µ–º –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–µ–∫—Ü–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const navigationPattern = /<!-- –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ -->[\s\S]*?–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–∞—Å—á–µ—Ç—ã ‚Üí[\s\S]*?<\/section>/g;
    const navigationMatches = content.match(new RegExp(navigationPattern.source, 'g'));
    if (navigationMatches && navigationMatches.length > 1) {
      // –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–µ–∫—Ü–∏–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–π
      for (let i = 1; i < navigationMatches.length; i++) {
        content = content.replace(navigationMatches[i], '');
      }
    }

    // 3. –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –±–ª–æ–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ "–ë—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—á–µ—Ç"
    const quickCalcPattern = /<div class="info-block">\s*<h3 class="text-lg font-semibold text-green-900 mb-3">‚ö° –ë—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—á–µ—Ç<\/h3>[\s\S]*?<\/div>/g;
    const quickCalcMatches = content.match(new RegExp(quickCalcPattern.source, 'g'));
    if (quickCalcMatches && quickCalcMatches.length > 1) {
      // –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –±–ª–æ–∫–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ
      for (let i = 1; i < quickCalcMatches.length; i++) {
        content = content.replace(quickCalcMatches[i], '');
      }
    }

    // 4. –û—á–∏—â–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    content = content.replace(/\n\s*\n\s*\n/g, '\n\n');
    content = content.replace(/}\s*\n\s*\.table-row-link/g, '}\n\n.table-row-link');

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª
    fs.writeFileSync(filePath, content, 'utf8');
    console.log(`‚úÖ –û—á–∏—â–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${pageName}`);
    return true;

  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ ${pageName}:`, error.message);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –¥—É–±–ª–∏—Ä—É—é—â–µ–≥–æ—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞...\n');

  // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å–ª–æ–≤ (–∫—Ä–æ–º–µ —É–∂–µ –æ—á–∏—â–µ–Ω–Ω—ã—Ö –≤—Ä—É—á–Ω—É—é)
  const wordPages = [
    'skolko-stranic-100-slov.astro',
    'skolko-stranic-200-slov.astro',
    'skolko-stranic-300-slov.astro',
    'skolko-stranic-400-slov.astro',
    'skolko-stranic-500-slov.astro',
    'skolko-stranic-600-slov.astro',
    'skolko-stranic-700-slov.astro',
    'skolko-stranic-800-slov.astro',
    'skolko-stranic-900-slov.astro',
    'skolko-stranic-1000-slov.astro',
    'skolko-stranic-1250-slov.astro',
    'skolko-stranic-1500-slov.astro',
    'skolko-stranic-2000-slov.astro',
    'skolko-stranic-2500-slov.astro',
    'skolko-stranic-3000-slov.astro',
    'skolko-stranic-3500-slov.astro',
    'skolko-stranic-4000-slov.astro',
    'skolko-stranic-4500-slov.astro',
    'skolko-stranic-5000-slov.astro'
  ];

  let successCount = 0;
  let failCount = 0;

  for (const page of wordPages) {
    if (cleanPage(page)) {
      successCount++;
    } else {
      failCount++;
    }
  }

  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—á–∏—Å—Ç–∫–∏:`);
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–æ: ${successCount} —Å—Ç—Ä–∞–Ω–∏—Ü`);
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${failCount} —Å—Ç—Ä–∞–Ω–∏—Ü`);
  console.log(`üßπ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É
main();